Namespace(batch_size=2, bits=16, checkpoint_iters=20000, clip=0.5, decoder_fuse_level=1, distance1=6, distance2=6, encoder_fuse_level=1, eval='/home/mallesh/deepvideo/data/vtl/test', eval_batch_size=1, eval_iters=100000, eval_mv='/home/mallesh/deepvideo/data/vtl/test_mv', fuse_encoder=True, gamma=0.5, gpus='0', in_dir='input', iterations=9, load_iter=100000, load_model_name='demo', lr=0.00025, max_train_iters=100000, model_dir='../vcodec/h0/model_iters_9', num_crops=2, out_dir='output', patch=64, save_codes=True, save_model_name='demo', save_out_img=True, schedule='50000,60000,70000,80000,90000', shrink=2, stack=True, train='/home/mallesh/deepvideo/data/dhf1k/train', train_mv='/home/mallesh/deepvideo/data/dhf1k/train_mv', v_compress=True, warp=True)
	Encoder fuse level: 1
	Decoder fuse level: 1
	Decoder fuse level: 1
[EncoderCell(
  (conv): Conv2d(9, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
), Binarizer(
  (conv): Conv2d(512, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (sign): Sign()
), DecoderCell(
  (conv1): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), DecoderCell2(
  (conv1): Conv2d(144, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), UNet(
  (inc): inconv(
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (down1): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down2): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down3): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down4): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (up1): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up2): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up3): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up4): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
)]
Loading demo@iter 100000
Loading encoder from ../vcodec/h0/model_iters_9/demo_encoder_00100000.pth...
Loading binarizer from ../vcodec/h0/model_iters_9/demo_binarizer_00100000.pth...
Loading decoder from ../vcodec/h0/model_iters_9/demo_decoder_00100000.pth...
Loading unet from ../vcodec/h0/model_iters_9/demo_unet_00100000.pth...
Loading d2 from ../vcodec/h0/model_iters_9/demo_d2_00100000.pth...

Creating loader for /home/mallesh/deepvideo/data/vtl/test...
136 images loaded.
	distance=6/6
Loader for 136 images (136 batches) created.
Decoding time: 15088us
Decoding time: 21270us
Decoding time: 16843us
Decoding time: 25251us
Decoding time: 16797us
Decoding time: 16768us
Decoding time: 25727us
Decoding time: 16776us
Decoding time: 24572us
Decoding time: 16829us
Decoding time: 16808us
Decoding time: 16800us
Decoding time: 16055us
Decoding time: 16830us
Decoding time: 16797us
Decoding time: 16775us
Decoding time: 16785us
Decoding time: 16850us
Decoding time: 25395us
Decoding time: 16817us
Decoding time: 16794us
Decoding time: 24095us
Decoding time: 16771us
Decoding time: 16781us
Decoding time: 24157us
Decoding time: 17381us
Decoding time: 23587us
Decoding time: 16810us
Decoding time: 25525us
Decoding time: 18317us
Decoding time: 25760us
Decoding time: 16793us
Decoding time: 25688us
Decoding time: 31600us
Decoding time: 16799us
Decoding time: 16826us
Decoding time: 25516us
Decoding time: 16008us
Decoding time: 25146us
Decoding time: 16131us
Decoding time: 25454us
Decoding time: 15900us
Decoding time: 25210us
Decoding time: 30835us
Decoding time: 17052us
Decoding time: 16810us
Decoding time: 16818us
Decoding time: 16742us
Decoding time: 16841us
Decoding time: 16804us
Decoding time: 16815us
Decoding time: 16847us
Decoding time: 16836us
Decoding time: 16801us
Decoding time: 16830us
Decoding time: 31200us
Decoding time: 16840us
Decoding time: 23641us
Decoding time: 16824us
Decoding time: 24650us
Decoding time: 16810us
Decoding time: 24545us
Decoding time: 16838us
Decoding time: 24735us
Decoding time: 16789us
Decoding time: 25404us
Decoding time: 17664us
Decoding time: 24221us
Decoding time: 16830us
Decoding time: 24528us
Decoding time: 16806us
Decoding time: 24622us
Decoding time: 17116us
Decoding time: 24497us
Decoding time: 16830us
Decoding time: 16755us
Decoding time: 18240us
Decoding time: 16813us
Decoding time: 16810us
Decoding time: 16807us
Decoding time: 16840us
Decoding time: 16763us
Decoding time: 16819us
Decoding time: 16813us
Decoding time: 29335us
Decoding time: 16813us
Decoding time: 16832us
Decoding time: 16916us
Decoding time: 30364us
Decoding time: 17397us
Decoding time: 25143us
Decoding time: 16787us
Decoding time: 27023us
Decoding time: 17632us
Decoding time: 22946us
Decoding time: 16847us
Decoding time: 16797us
Decoding time: 23391us
Decoding time: 16828us
Decoding time: 24812us
Decoding time: 16816us
Decoding time: 21283us
Decoding time: 16828us
Decoding time: 24775us
Decoding time: 16877us
Decoding time: 25205us
Decoding time: 16834us
Decoding time: 24242us
Decoding time: 17034us
Decoding time: 23709us
Decoding time: 18418us
Decoding time: 16838us
Decoding time: 16822us
Decoding time: 16771us
Decoding time: 16831us
Decoding time: 16805us
Decoding time: 16840us
Decoding time: 16791us
Decoding time: 21906us
Decoding time: 19243us
Decoding time: 16778us
Decoding time: 24679us
Decoding time: 16816us
Decoding time: 24373us
Decoding time: 16821us
Decoding time: 24228us
Decoding time: 16874us
Decoding time: 17067us
Decoding time: 25351us
Decoding time: 16834us
Decoding time: 24865us
Decoding time: 16800us
Decoding time: 27484us
Decoding time: 20029us
Decoding time: 27740us
Decoding time: 20126us
Evaluation @iter 100000 done in 23 secs
TVL Loss   : 0.03089
TVL MS-SSIM: 0.95163
TVL PSNR   : 32.38558
Namespace(batch_size=2, bits=16, checkpoint_iters=20000, clip=0.5, decoder_fuse_level=3, distance1=3, distance2=3, encoder_fuse_level=2, eval='/home/mallesh/deepvideo/data/vtl/test', eval_batch_size=1, eval_iters=100000, eval_mv='/home/mallesh/deepvideo/data/vtl/test_mv', fuse_encoder=True, gamma=0.5, gpus='0', in_dir='input', iterations=9, load_iter=100000, load_model_name='demo', lr=0.00025, max_train_iters=100000, model_dir='../vcodec/h1/model_iters_9', num_crops=2, out_dir='output', patch=64, save_codes=True, save_model_name='demo', save_out_img=True, schedule='50000,60000,70000,80000,90000', shrink=2, stack=True, train='/home/mallesh/deepvideo/data/dhf1k/train', train_mv='/home/mallesh/deepvideo/data/dhf1k/train_mv', v_compress=True, warp=True)
	Encoder fuse level: 2
	Decoder fuse level: 3
	Decoder fuse level: 3
[EncoderCell(
  (conv): Conv2d(9, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(384, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
), Binarizer(
  (conv): Conv2d(512, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (sign): Sign()
), DecoderCell(
  (conv1): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(384, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), DecoderCell2(
  (conv1): Conv2d(144, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(384, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), UNet(
  (inc): inconv(
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (down1): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down2): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down3): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down4): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (up1): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up2): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up3): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up4): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
)]
Loading demo@iter 100000
Loading encoder from ../vcodec/h1/model_iters_9/demo_encoder_00100000.pth...
Loading binarizer from ../vcodec/h1/model_iters_9/demo_binarizer_00100000.pth...
Loading decoder from ../vcodec/h1/model_iters_9/demo_decoder_00100000.pth...
Loading unet from ../vcodec/h1/model_iters_9/demo_unet_00100000.pth...
Loading d2 from ../vcodec/h1/model_iters_9/demo_d2_00100000.pth...

Creating loader for /home/mallesh/deepvideo/data/vtl/test...
272 images loaded.
	distance=3/3
Loader for 272 images (272 batches) created.
Decoding time: 17218us
Decoding time: 22125us
Decoding time: 25442us
Decoding time: 19005us
Decoding time: 24613us
Decoding time: 51329us
Decoding time: 65838us
Decoding time: 130494us
Decoding time: 111598us
Decoding time: 107759us
Decoding time: 85616us
Decoding time: 101480us
Decoding time: 79537us
Decoding time: 106421us
Decoding time: 119376us
Decoding time: 109154us
Decoding time: 67877us
Decoding time: 48822us
Decoding time: 115914us
Decoding time: 75574us
Decoding time: 126873us
Decoding time: 111038us
Decoding time: 125146us
Decoding time: 118988us
Decoding time: 109865us
Decoding time: 87701us
Decoding time: 83546us
Decoding time: 114112us
Decoding time: 115816us
Decoding time: 115076us
Decoding time: 83763us
Decoding time: 121081us
Decoding time: 110033us
Decoding time: 113009us
Decoding time: 18996us
Decoding time: 167687us
Decoding time: 119531us
Decoding time: 113910us
Decoding time: 126103us
Decoding time: 90437us
Decoding time: 75843us
Decoding time: 115125us
Decoding time: 109510us
Decoding time: 69917us
Decoding time: 118319us
Decoding time: 116568us
Decoding time: 111281us
Decoding time: 122361us
Decoding time: 117218us
Decoding time: 99692us
Decoding time: 118926us
Decoding time: 119903us
Decoding time: 121642us
Decoding time: 122298us
Decoding time: 86476us
Decoding time: 124100us
Decoding time: 103203us
Decoding time: 95779us
Decoding time: 26874us
Decoding time: 18997us
Decoding time: 18963us
Decoding time: 18795us
Decoding time: 20368us
Decoding time: 18444us
Decoding time: 19024us
Decoding time: 18980us
Decoding time: 19015us
Decoding time: 18926us
Decoding time: 18995us
Decoding time: 18977us
Decoding time: 18967us
Decoding time: 18960us
Decoding time: 18988us
Decoding time: 18973us
Decoding time: 19010us
Decoding time: 18970us
Decoding time: 18990us
Decoding time: 19011us
Decoding time: 18995us
Decoding time: 19012us
Decoding time: 18956us
Decoding time: 18946us
Decoding time: 18975us
Decoding time: 18984us
Decoding time: 18993us
Decoding time: 18280us
Decoding time: 19012us
Decoding time: 18277us
Decoding time: 19025us
Decoding time: 19022us
Decoding time: 18992us
Decoding time: 19012us
Decoding time: 19025us
Decoding time: 18993us
Decoding time: 19021us
Decoding time: 18999us
Decoding time: 19008us
Decoding time: 18987us
Decoding time: 19023us
Decoding time: 19016us
Decoding time: 18988us
Decoding time: 18981us
Decoding time: 19027us
Decoding time: 19013us
Decoding time: 19005us
Decoding time: 19011us
Decoding time: 19000us
Decoding time: 18960us
Decoding time: 19033us
Decoding time: 18956us
Decoding time: 19004us
Decoding time: 19032us
Decoding time: 18235us
Decoding time: 19003us
Decoding time: 19005us
Decoding time: 18982us
Decoding time: 18979us
Decoding time: 19036us
Decoding time: 19033us
Decoding time: 20927us
Decoding time: 19782us
Decoding time: 19603us
Decoding time: 18977us
Decoding time: 18977us
Decoding time: 19000us
Decoding time: 18996us
Decoding time: 18298us
Decoding time: 18178us
Decoding time: 19037us
Decoding time: 18043us
Decoding time: 18274us
Decoding time: 18084us
Decoding time: 18989us
Decoding time: 18215us
Decoding time: 18300us
Decoding time: 18160us
Decoding time: 18995us
Decoding time: 18167us
Decoding time: 18983us
Decoding time: 18081us
Decoding time: 19007us
Decoding time: 18995us
Decoding time: 19011us
Decoding time: 19021us
Decoding time: 18240us
Decoding time: 18315us
Decoding time: 18979us
Decoding time: 18988us
Decoding time: 18979us
Decoding time: 19019us
Decoding time: 19006us
Decoding time: 19019us
Decoding time: 18976us
Decoding time: 18972us
Decoding time: 19037us
Decoding time: 18943us
Decoding time: 24048us
Decoding time: 18993us
Decoding time: 18963us
Decoding time: 18980us
Decoding time: 18997us
Decoding time: 18969us
Decoding time: 18995us
Decoding time: 19000us
Decoding time: 19042us
Decoding time: 18977us
Decoding time: 19001us
Decoding time: 18994us
Decoding time: 18990us
Decoding time: 18979us
Decoding time: 18992us
Decoding time: 18240us
Decoding time: 19022us
Decoding time: 18169us
Decoding time: 19004us
Decoding time: 18105us
Decoding time: 18971us
Decoding time: 18030us
Decoding time: 18238us
Decoding time: 18185us
Decoding time: 18990us
Decoding time: 18212us
Decoding time: 18911us
Decoding time: 18220us
Decoding time: 18976us
Decoding time: 18995us
Decoding time: 18082us
Decoding time: 19021us
Decoding time: 18992us
Decoding time: 19023us
Decoding time: 18975us
Decoding time: 18295us
Decoding time: 19022us
Decoding time: 18216us
Decoding time: 18964us
Decoding time: 18285us
Decoding time: 18953us
Decoding time: 18228us
Decoding time: 19032us
Decoding time: 18986us
Decoding time: 18999us
Decoding time: 18996us
Decoding time: 19004us
Decoding time: 18993us
Decoding time: 19026us
Decoding time: 19007us
Decoding time: 18994us
Decoding time: 18954us
Decoding time: 18985us
Decoding time: 18993us
Decoding time: 18233us
Decoding time: 18995us
Decoding time: 19005us
Decoding time: 19005us
Decoding time: 18966us
Decoding time: 18961us
Decoding time: 18999us
Decoding time: 19008us
Decoding time: 19018us
Decoding time: 19013us
Decoding time: 18991us
Decoding time: 19014us
Decoding time: 18992us
Decoding time: 18936us
Decoding time: 19015us
Decoding time: 18946us
Decoding time: 18974us
Decoding time: 18969us
Decoding time: 18938us
Decoding time: 18963us
Decoding time: 18987us
Decoding time: 18959us
Decoding time: 18956us
Decoding time: 18970us
Decoding time: 18949us
Decoding time: 18980us
Decoding time: 19079us
Decoding time: 19002us
Decoding time: 19030us
Decoding time: 18991us
Decoding time: 19032us
Decoding time: 19019us
Decoding time: 19014us
Decoding time: 19023us
Decoding time: 19035us
Decoding time: 19031us
Decoding time: 19032us
Decoding time: 18981us
Decoding time: 18994us
Decoding time: 19031us
Decoding time: 18992us
Decoding time: 19015us
Decoding time: 18964us
Decoding time: 19012us
Decoding time: 19013us
Decoding time: 19012us
Decoding time: 18974us
Decoding time: 19008us
Decoding time: 19000us
Decoding time: 19041us
Decoding time: 18982us
Decoding time: 18986us
Decoding time: 19048us
Decoding time: 18980us
Decoding time: 19024us
Decoding time: 18988us
Decoding time: 19011us
Decoding time: 18999us
Decoding time: 18913us
Decoding time: 18906us
Decoding time: 18921us
Decoding time: 18900us
Evaluation @iter 100000 done in 51 secs
TVL Loss   : 0.03559
TVL MS-SSIM: 0.93333
TVL PSNR   : 31.70705
Namespace(batch_size=2, bits=8, checkpoint_iters=20000, clip=0.5, decoder_fuse_level=1, distance1=1, distance2=2, encoder_fuse_level=1, eval='/home/mallesh/deepvideo/data/vtl/test', eval_batch_size=1, eval_iters=100000, eval_mv='/home/mallesh/deepvideo/data/vtl/test_mv', fuse_encoder=True, gamma=0.5, gpus='0', in_dir='input', iterations=9, load_iter=100000, load_model_name='demo', lr=0.00025, max_train_iters=100000, model_dir='../vcodec/h2/model_iters_9', num_crops=2, out_dir='output', patch=64, save_codes=True, save_model_name='demo', save_out_img=True, schedule='50000,60000,70000,80000,90000', shrink=2, stack=True, train='/home/mallesh/deepvideo/data/dhf1k/train', train_mv='/home/mallesh/deepvideo/data/dhf1k/train_mv', v_compress=True, warp=True)
	Encoder fuse level: 1
	Decoder fuse level: 1
	Decoder fuse level: 1
[EncoderCell(
  (conv): Conv2d(9, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
), Binarizer(
  (conv): Conv2d(512, 8, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (sign): Sign()
), DecoderCell(
  (conv1): Conv2d(8, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), DecoderCell2(
  (conv1): Conv2d(72, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), UNet(
  (inc): inconv(
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (down1): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down2): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down3): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down4): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (up1): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up2): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up3): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up4): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
)]
Loading demo@iter 100000
Loading encoder from ../vcodec/h2/model_iters_9/demo_encoder_00100000.pth...
Loading binarizer from ../vcodec/h2/model_iters_9/demo_binarizer_00100000.pth...
Loading decoder from ../vcodec/h2/model_iters_9/demo_decoder_00100000.pth...
Loading unet from ../vcodec/h2/model_iters_9/demo_unet_00100000.pth...
Loading d2 from ../vcodec/h2/model_iters_9/demo_d2_00100000.pth...

Creating loader for /home/mallesh/deepvideo/data/vtl/test...
1088 images loaded.
	distance=1/2
Loader for 1088 images (1088 batches) created.
Decoding time: 14968us
Decoding time: 16653us
Decoding time: 16650us
Decoding time: 16694us
Decoding time: 16712us
Decoding time: 16685us
Decoding time: 16640us
Decoding time: 16682us
Decoding time: 16646us
Decoding time: 16731us
Decoding time: 15762us
Decoding time: 15862us
Decoding time: 15858us
Decoding time: 15638us
Decoding time: 16655us
Decoding time: 15864us
Decoding time: 16671us
Decoding time: 15914us
Decoding time: 16635us
Decoding time: 16594us
Decoding time: 16659us
Decoding time: 16644us
Decoding time: 16674us
Decoding time: 16655us
Decoding time: 16681us
Decoding time: 16608us
Decoding time: 15745us
Decoding time: 16604us
Decoding time: 16670us
Decoding time: 16648us
Decoding time: 16618us
Decoding time: 16657us
Decoding time: 16576us
Decoding time: 16590us
Decoding time: 16617us
Decoding time: 16674us
Decoding time: 16681us
Decoding time: 16684us
Decoding time: 16604us
Decoding time: 16687us
Decoding time: 16630us
Decoding time: 16676us
Decoding time: 16623us
Decoding time: 16684us
Decoding time: 16768us
Decoding time: 16661us
Decoding time: 16680us
Decoding time: 16694us
Decoding time: 16650us
Decoding time: 16657us
Decoding time: 16590us
Decoding time: 16665us
Decoding time: 16709us
Decoding time: 16854us
Decoding time: 16664us
Decoding time: 16607us
Decoding time: 16625us
Decoding time: 16701us
Decoding time: 16650us
Decoding time: 16606us
Decoding time: 16598us
Decoding time: 16632us
Decoding time: 16659us
Decoding time: 16603us
Decoding time: 16590us
Decoding time: 16656us
Decoding time: 16676us
Decoding time: 16605us
Decoding time: 16601us
Decoding time: 16598us
Decoding time: 16598us
Decoding time: 16633us
Decoding time: 16592us
Decoding time: 16624us
Decoding time: 16616us
Decoding time: 16660us
Decoding time: 16585us
Decoding time: 16666us
Decoding time: 16591us
Decoding time: 16548us
Decoding time: 16667us
Decoding time: 16657us
Decoding time: 16653us
Decoding time: 16850us
Decoding time: 16618us
Decoding time: 16680us
Decoding time: 16668us
Decoding time: 16662us
Decoding time: 16708us
Decoding time: 16714us
Decoding time: 16602us
Decoding time: 16639us
Decoding time: 16664us
Decoding time: 16612us
Decoding time: 16666us
Decoding time: 16656us
Decoding time: 16611us
Decoding time: 16700us
Decoding time: 16663us
Decoding time: 16595us
Decoding time: 16559us
Decoding time: 16668us
Decoding time: 16602us
Decoding time: 16674us
Decoding time: 16680us
Decoding time: 16631us
Decoding time: 16610us
Decoding time: 16625us
Decoding time: 16626us
Decoding time: 16643us
Decoding time: 16605us
Decoding time: 16629us
Decoding time: 16633us
Decoding time: 16653us
Decoding time: 16598us
Decoding time: 16581us
Decoding time: 16580us
Decoding time: 16594us
Decoding time: 16646us
Decoding time: 16600us
Decoding time: 16667us
Decoding time: 16592us
Decoding time: 16640us
Decoding time: 16606us
Decoding time: 16597us
Decoding time: 16606us
Decoding time: 16676us
Decoding time: 16576us
Decoding time: 16573us
Decoding time: 16606us
Decoding time: 16606us
Decoding time: 16595us
Decoding time: 16663us
Decoding time: 16676us
Decoding time: 16639us
Decoding time: 16611us
Decoding time: 16623us
Decoding time: 16658us
Decoding time: 16652us
Decoding time: 16625us
Decoding time: 16595us
Decoding time: 16640us
Decoding time: 16583us
Decoding time: 16660us
Decoding time: 16657us
Decoding time: 16637us
Decoding time: 15828us
Decoding time: 15609us
Decoding time: 15663us
Decoding time: 15569us
Decoding time: 15667us
Decoding time: 16674us
Decoding time: 15884us
Decoding time: 16598us
Decoding time: 15820us
Decoding time: 16631us
Decoding time: 16638us
Decoding time: 15785us
Decoding time: 16642us
Decoding time: 16563us
Decoding time: 16816us
Decoding time: 16610us
Decoding time: 16561us
Decoding time: 16617us
Decoding time: 16642us
Decoding time: 16811us
Decoding time: 16607us
Decoding time: 16663us
Decoding time: 16623us
Decoding time: 16849us
Decoding time: 16628us
Decoding time: 16685us
Decoding time: 16614us
Decoding time: 16617us
Decoding time: 16611us
Decoding time: 15826us
Decoding time: 15851us
Decoding time: 16894us
Decoding time: 16673us
Decoding time: 16641us
Decoding time: 16638us
Decoding time: 16688us
Decoding time: 16678us
Decoding time: 16912us
Decoding time: 16658us
Decoding time: 16693us
Decoding time: 16649us
Decoding time: 16644us
Decoding time: 16638us
Decoding time: 16622us
Decoding time: 16573us
Decoding time: 16634us
Decoding time: 16655us
Decoding time: 16663us
Decoding time: 16679us
Decoding time: 16598us
Decoding time: 16602us
Decoding time: 16662us
Decoding time: 16585us
Decoding time: 16680us
Decoding time: 16646us
Decoding time: 16658us
Decoding time: 16664us
Decoding time: 16600us
Decoding time: 16678us
Decoding time: 16766us
Decoding time: 16593us
Decoding time: 16653us
Decoding time: 16606us
Decoding time: 16654us
Decoding time: 16628us
Decoding time: 16850us
Decoding time: 16584us
Decoding time: 16657us
Decoding time: 16681us
Decoding time: 16667us
Decoding time: 16671us
Decoding time: 16685us
Decoding time: 16618us
Decoding time: 16653us
Decoding time: 16673us
Decoding time: 16651us
Decoding time: 16665us
Decoding time: 16675us
Decoding time: 16683us
Decoding time: 16673us
Decoding time: 16668us
Decoding time: 16607us
Decoding time: 16598us
Decoding time: 16627us
Decoding time: 16697us
Decoding time: 16619us
Decoding time: 16669us
Decoding time: 16633us
Decoding time: 16634us
Decoding time: 16671us
Decoding time: 16578us
Decoding time: 16649us
Decoding time: 16639us
Decoding time: 16639us
Decoding time: 16604us
Decoding time: 16599us
Decoding time: 16595us
Decoding time: 16607us
Decoding time: 16593us
Decoding time: 16613us
Decoding time: 16550us
Decoding time: 16657us
Decoding time: 16673us
Decoding time: 16672us
Decoding time: 16607us
Decoding time: 16600us
Decoding time: 16688us
Decoding time: 16663us
Decoding time: 16676us
Decoding time: 16640us
Decoding time: 16576us
Decoding time: 16626us
Decoding time: 16623us
Decoding time: 16636us
Decoding time: 16602us
Decoding time: 16642us
Decoding time: 16653us
Decoding time: 16640us
Decoding time: 16634us
Decoding time: 16584us
Decoding time: 15561us
Decoding time: 15858us
Decoding time: 15589us
Decoding time: 15783us
Decoding time: 16596us
Decoding time: 16613us
Decoding time: 16632us
Decoding time: 16653us
Decoding time: 16608us
Decoding time: 16612us
Decoding time: 16567us
Decoding time: 15767us
Decoding time: 15831us
Decoding time: 15657us
Decoding time: 15890us
Decoding time: 15807us
Decoding time: 15646us
Decoding time: 15806us
Decoding time: 15602us
Decoding time: 15781us
Decoding time: 16643us
Decoding time: 16661us
Decoding time: 16732us
Decoding time: 16647us
Decoding time: 15830us
Decoding time: 16662us
Decoding time: 16652us
Decoding time: 16655us
Decoding time: 16593us
Decoding time: 16639us
Decoding time: 16650us
Decoding time: 16667us
Decoding time: 16624us
Decoding time: 16647us
Decoding time: 16620us
Decoding time: 16635us
Decoding time: 16613us
Decoding time: 16612us
Decoding time: 16643us
Decoding time: 16669us
Decoding time: 16637us
Decoding time: 16651us
Decoding time: 16624us
Decoding time: 16624us
Decoding time: 16612us
Decoding time: 16637us
Decoding time: 16641us
Decoding time: 16720us
Decoding time: 16576us
Decoding time: 16630us
Decoding time: 16672us
Decoding time: 16627us
Decoding time: 16644us
Decoding time: 16642us
Decoding time: 16624us
Decoding time: 16633us
Decoding time: 16575us
Decoding time: 16611us
Decoding time: 16603us
Decoding time: 16639us
Decoding time: 16651us
Decoding time: 16691us
Decoding time: 16641us
Decoding time: 16668us
Decoding time: 16626us
Decoding time: 16640us
Decoding time: 16670us
Decoding time: 16659us
Decoding time: 16589us
Decoding time: 16638us
Decoding time: 16646us
Decoding time: 16664us
Decoding time: 16669us
Decoding time: 16591us
Decoding time: 16643us
Decoding time: 16644us
Decoding time: 16657us
Decoding time: 16671us
Decoding time: 16651us
Decoding time: 16653us
Decoding time: 16682us
Decoding time: 16607us
Decoding time: 16608us
Decoding time: 16666us
Decoding time: 16643us
Decoding time: 16660us
Decoding time: 16658us
Decoding time: 16599us
Decoding time: 16678us
Decoding time: 16601us
Decoding time: 16580us
Decoding time: 16656us
Decoding time: 16649us
Decoding time: 16587us
Decoding time: 16905us
Decoding time: 16639us
Decoding time: 16613us
Decoding time: 16683us
Decoding time: 16616us
Decoding time: 16610us
Decoding time: 16603us
Decoding time: 16630us
Decoding time: 16605us
Decoding time: 16654us
Decoding time: 16679us
Decoding time: 16680us
Decoding time: 16671us
Decoding time: 16618us
Decoding time: 16640us
Decoding time: 16665us
Decoding time: 16653us
Decoding time: 16629us
Decoding time: 16648us
Decoding time: 16685us
Decoding time: 16684us
Decoding time: 16607us
Decoding time: 16641us
Decoding time: 16667us
Decoding time: 16684us
Decoding time: 16652us
Decoding time: 16649us
Decoding time: 16677us
Decoding time: 16668us
Decoding time: 16569us
Decoding time: 16622us
Decoding time: 16597us
Decoding time: 16620us
Decoding time: 16642us
Decoding time: 16705us
Decoding time: 16645us
Decoding time: 16620us
Decoding time: 16655us
Decoding time: 16598us
Decoding time: 16619us
Decoding time: 16658us
Decoding time: 16554us
Decoding time: 16631us
Decoding time: 16671us
Decoding time: 16572us
Decoding time: 16548us
Decoding time: 16556us
Decoding time: 16564us
Decoding time: 16651us
Decoding time: 16631us
Decoding time: 16678us
Decoding time: 16628us
Decoding time: 16629us
Decoding time: 16674us
Decoding time: 16564us
Decoding time: 16518us
Decoding time: 16579us
Decoding time: 16663us
Decoding time: 16586us
Decoding time: 16629us
Decoding time: 16558us
Decoding time: 16612us
Decoding time: 16656us
Decoding time: 16642us
Decoding time: 16559us
Decoding time: 16554us
Decoding time: 16660us
Decoding time: 16581us
Decoding time: 16688us
Decoding time: 16561us
Decoding time: 16606us
Decoding time: 16661us
Decoding time: 16652us
Decoding time: 16641us
Decoding time: 16572us
Decoding time: 16631us
Decoding time: 16638us
Decoding time: 16551us
Decoding time: 16572us
Decoding time: 16628us
Decoding time: 16655us
Decoding time: 16562us
Decoding time: 16678us
Decoding time: 15875us
Decoding time: 16665us
Decoding time: 16598us
Decoding time: 15838us
Decoding time: 16576us
Decoding time: 16649us
Decoding time: 16673us
Decoding time: 16583us
Decoding time: 16699us
Decoding time: 16601us
Decoding time: 16637us
Decoding time: 16562us
Decoding time: 16641us
Decoding time: 16683us
Decoding time: 16591us
Decoding time: 16679us
Decoding time: 16676us
Decoding time: 16626us
Decoding time: 16685us
Decoding time: 16621us
Decoding time: 15599us
Decoding time: 16570us
Decoding time: 16648us
Decoding time: 16598us
Decoding time: 16540us
Decoding time: 16579us
Decoding time: 16647us
Decoding time: 16588us
Decoding time: 16562us
Decoding time: 16570us
Decoding time: 16664us
Decoding time: 16529us
Decoding time: 16546us
Decoding time: 16579us
Decoding time: 16531us
Decoding time: 16641us
Decoding time: 16640us
Decoding time: 16625us
Decoding time: 16632us
Decoding time: 16660us
Decoding time: 16574us
Decoding time: 16604us
Decoding time: 16666us
Decoding time: 16524us
Decoding time: 16550us
Decoding time: 16600us
Decoding time: 16536us
Decoding time: 16613us
Decoding time: 16666us
Decoding time: 16573us
Decoding time: 16656us
Decoding time: 16654us
Decoding time: 16575us
Decoding time: 16652us
Decoding time: 16652us
Decoding time: 16628us
Decoding time: 16541us
Decoding time: 16642us
Decoding time: 16527us
Decoding time: 16542us
Decoding time: 17162us
Decoding time: 16596us
Decoding time: 16644us
Decoding time: 16587us
Decoding time: 16671us
Decoding time: 16649us
Decoding time: 16530us
Decoding time: 16550us
Decoding time: 16621us
Decoding time: 16547us
Decoding time: 16557us
Decoding time: 16684us
Decoding time: 16656us
Decoding time: 16636us
Decoding time: 16681us
Decoding time: 16605us
Decoding time: 16544us
Decoding time: 16636us
Decoding time: 16675us
Decoding time: 16641us
Decoding time: 16624us
Decoding time: 16545us
Decoding time: 16657us
Decoding time: 16650us
Decoding time: 16647us
Decoding time: 16616us
Decoding time: 16666us
Decoding time: 16635us
Decoding time: 16555us
Decoding time: 16651us
Decoding time: 16578us
Decoding time: 16551us
Decoding time: 16653us
Decoding time: 16561us
Decoding time: 16651us
Decoding time: 16537us
Decoding time: 16558us
Decoding time: 16527us
Decoding time: 16550us
Decoding time: 16613us
Decoding time: 16626us
Decoding time: 16657us
Decoding time: 16642us
Decoding time: 16531us
Decoding time: 16549us
Decoding time: 16569us
Decoding time: 16683us
Decoding time: 16656us
Decoding time: 16623us
Decoding time: 16621us
Decoding time: 16646us
Decoding time: 16607us
Decoding time: 16529us
Decoding time: 16635us
Decoding time: 16511us
Decoding time: 16544us
Decoding time: 16549us
Decoding time: 16546us
Decoding time: 16551us
Decoding time: 16608us
Decoding time: 16580us
Decoding time: 16549us
Decoding time: 16548us
Decoding time: 16520us
Decoding time: 16534us
Decoding time: 16675us
Decoding time: 16659us
Decoding time: 16615us
Decoding time: 16572us
Decoding time: 16605us
Decoding time: 16547us
Decoding time: 16520us
Decoding time: 16560us
Decoding time: 16604us
Decoding time: 16694us
Decoding time: 16546us
Decoding time: 16561us
Decoding time: 16636us
Decoding time: 16541us
Decoding time: 16519us
Decoding time: 16649us
Decoding time: 16610us
Decoding time: 16536us
Decoding time: 16656us
Decoding time: 16629us
Decoding time: 16661us
Decoding time: 16639us
Decoding time: 16655us
Decoding time: 16557us
Decoding time: 16544us
Decoding time: 16604us
Decoding time: 16611us
Decoding time: 16645us
Decoding time: 16638us
Decoding time: 16611us
Decoding time: 16664us
Decoding time: 16560us
Decoding time: 16680us
Decoding time: 16647us
Decoding time: 16651us
Decoding time: 16656us
Decoding time: 15781us
Decoding time: 16665us
Decoding time: 15641us
Decoding time: 16673us
Decoding time: 15625us
Decoding time: 16699us
Decoding time: 16648us
Decoding time: 16662us
Decoding time: 16567us
Decoding time: 16658us
Decoding time: 16560us
Decoding time: 15825us
Decoding time: 16577us
Decoding time: 16668us
Decoding time: 16576us
Decoding time: 16669us
Decoding time: 16667us
Decoding time: 16661us
Decoding time: 16669us
Decoding time: 16668us
Decoding time: 16665us
Decoding time: 16620us
Decoding time: 16660us
Decoding time: 16588us
Decoding time: 16640us
Decoding time: 16640us
Decoding time: 16682us
Decoding time: 16613us
Decoding time: 16579us
Decoding time: 16646us
Decoding time: 16595us
Decoding time: 16691us
Decoding time: 16657us
Decoding time: 16687us
Decoding time: 16628us
Decoding time: 15602us
Decoding time: 16641us
Decoding time: 16679us
Decoding time: 16655us
Decoding time: 16593us
Decoding time: 16528us
Decoding time: 16655us
Decoding time: 16631us
Decoding time: 16571us
Decoding time: 16621us
Decoding time: 16579us
Decoding time: 16652us
Decoding time: 16585us
Decoding time: 16595us
Decoding time: 16575us
Decoding time: 16684us
Decoding time: 16671us
Decoding time: 16588us
Decoding time: 16630us
Decoding time: 16612us
Decoding time: 16662us
Decoding time: 16661us
Decoding time: 16661us
Decoding time: 16605us
Decoding time: 16572us
Decoding time: 16610us
Decoding time: 16652us
Decoding time: 16608us
Decoding time: 16567us
Decoding time: 16661us
Decoding time: 16630us
Decoding time: 16644us
Decoding time: 16593us
Decoding time: 16697us
Decoding time: 16610us
Decoding time: 16632us
Decoding time: 16636us
Decoding time: 16575us
Decoding time: 16552us
Decoding time: 16556us
Decoding time: 16661us
Decoding time: 16597us
Decoding time: 16652us
Decoding time: 16671us
Decoding time: 16651us
Decoding time: 16608us
Decoding time: 16597us
Decoding time: 16638us
Decoding time: 16649us
Decoding time: 16623us
Decoding time: 16552us
Decoding time: 16620us
Decoding time: 16675us
Decoding time: 16651us
Decoding time: 16599us
Decoding time: 16615us
Decoding time: 16646us
Decoding time: 16604us
Decoding time: 16581us
Decoding time: 16623us
Decoding time: 16663us
Decoding time: 16560us
Decoding time: 16653us
Decoding time: 16601us
Decoding time: 16691us
Decoding time: 16650us
Decoding time: 16570us
Decoding time: 16594us
Decoding time: 16599us
Decoding time: 16671us
Decoding time: 16602us
Decoding time: 16662us
Decoding time: 16674us
Decoding time: 16600us
Decoding time: 16661us
Decoding time: 16661us
Decoding time: 16572us
Decoding time: 16674us
Decoding time: 16599us
Decoding time: 16573us
Decoding time: 16652us
Decoding time: 16629us
Decoding time: 16650us
Decoding time: 16660us
Decoding time: 16671us
Decoding time: 16653us
Decoding time: 16602us
Decoding time: 16631us
Decoding time: 16590us
Decoding time: 16604us
Decoding time: 16690us
Decoding time: 16621us
Decoding time: 16612us
Decoding time: 16676us
Decoding time: 16618us
Decoding time: 16685us
Decoding time: 16622us
Decoding time: 16642us
Decoding time: 16568us
Decoding time: 16619us
Decoding time: 16641us
Decoding time: 16641us
Decoding time: 16588us
Decoding time: 16638us
Decoding time: 16645us
Decoding time: 16606us
Decoding time: 16584us
Decoding time: 16572us
Decoding time: 16556us
Decoding time: 16602us
Decoding time: 16587us
Decoding time: 16630us
Decoding time: 16665us
Decoding time: 16653us
Decoding time: 16557us
Decoding time: 16686us
Decoding time: 16689us
Decoding time: 16589us
Decoding time: 16604us
Decoding time: 16573us
Decoding time: 16581us
Decoding time: 16604us
Decoding time: 16629us
Decoding time: 16599us
Decoding time: 16595us
Decoding time: 16589us
Decoding time: 16669us
Decoding time: 16639us
Decoding time: 16592us
Decoding time: 16589us
Decoding time: 16593us
Decoding time: 16665us
Decoding time: 16684us
Decoding time: 16568us
Decoding time: 16582us
Decoding time: 16623us
Decoding time: 16581us
Decoding time: 16595us
Decoding time: 16672us
Decoding time: 16599us
Decoding time: 16621us
Decoding time: 16658us
Decoding time: 16586us
Decoding time: 16561us
Decoding time: 16563us
Decoding time: 16639us
Decoding time: 16560us
Decoding time: 16640us
Decoding time: 16650us
Decoding time: 16699us
Decoding time: 16645us
Decoding time: 16672us
Decoding time: 16573us
Decoding time: 16643us
Decoding time: 16582us
Decoding time: 16621us
Decoding time: 16591us
Decoding time: 16636us
Decoding time: 16607us
Decoding time: 16574us
Decoding time: 16660us
Decoding time: 16687us
Decoding time: 16662us
Decoding time: 16607us
Decoding time: 16581us
Decoding time: 16634us
Decoding time: 16639us
Decoding time: 16673us
Decoding time: 16673us
Decoding time: 16618us
Decoding time: 16550us
Decoding time: 16643us
Decoding time: 16684us
Decoding time: 16557us
Decoding time: 16653us
Decoding time: 15781us
Decoding time: 16688us
Decoding time: 16584us
Decoding time: 16684us
Decoding time: 16642us
Decoding time: 16606us
Decoding time: 16636us
Decoding time: 16668us
Decoding time: 16585us
Decoding time: 16684us
Decoding time: 16648us
Decoding time: 16651us
Decoding time: 16584us
Decoding time: 16628us
Decoding time: 16648us
Decoding time: 16671us
Decoding time: 16604us
Decoding time: 16658us
Decoding time: 16627us
Decoding time: 16605us
Decoding time: 16592us
Decoding time: 16655us
Decoding time: 16661us
Decoding time: 16620us
Decoding time: 16668us
Decoding time: 16610us
Decoding time: 16617us
Decoding time: 16648us
Decoding time: 16552us
Decoding time: 16593us
Decoding time: 16586us
Decoding time: 16653us
Decoding time: 16613us
Decoding time: 16584us
Decoding time: 16646us
Decoding time: 16598us
Decoding time: 16660us
Decoding time: 16567us
Decoding time: 16636us
Decoding time: 16576us
Decoding time: 16581us
Decoding time: 16601us
Decoding time: 16613us
Decoding time: 16578us
Decoding time: 16576us
Decoding time: 16657us
Decoding time: 16627us
Decoding time: 16550us
Decoding time: 16597us
Decoding time: 16716us
Decoding time: 16562us
Decoding time: 16613us
Decoding time: 16668us
Decoding time: 16672us
Decoding time: 16638us
Decoding time: 16597us
Decoding time: 16586us
Decoding time: 16662us
Decoding time: 16612us
Decoding time: 16596us
Decoding time: 16656us
Decoding time: 16619us
Decoding time: 16635us
Decoding time: 16645us
Decoding time: 16596us
Decoding time: 16535us
Decoding time: 16657us
Decoding time: 16608us
Decoding time: 16663us
Decoding time: 16619us
Decoding time: 16595us
Decoding time: 16584us
Decoding time: 16623us
Decoding time: 16555us
Decoding time: 16664us
Decoding time: 16651us
Decoding time: 16580us
Decoding time: 16620us
Decoding time: 16617us
Decoding time: 16628us
Decoding time: 16620us
Decoding time: 16555us
Decoding time: 16625us
Decoding time: 16589us
Decoding time: 16624us
Decoding time: 16664us
Decoding time: 16663us
Decoding time: 16645us
Decoding time: 16604us
Decoding time: 16647us
Decoding time: 16613us
Decoding time: 16602us
Decoding time: 16575us
Decoding time: 16643us
Decoding time: 16639us
Decoding time: 16641us
Decoding time: 16644us
Decoding time: 16648us
Decoding time: 16561us
Decoding time: 16564us
Decoding time: 16565us
Decoding time: 16672us
Decoding time: 16618us
Decoding time: 16602us
Decoding time: 16634us
Decoding time: 16569us
Decoding time: 16641us
Decoding time: 16602us
Decoding time: 16609us
Decoding time: 16655us
Decoding time: 16619us
Decoding time: 16631us
Decoding time: 16650us
Decoding time: 16682us
Decoding time: 16668us
Decoding time: 16622us
Decoding time: 16659us
Decoding time: 16609us
Decoding time: 16690us
Decoding time: 16598us
Decoding time: 16674us
Decoding time: 16672us
Decoding time: 16619us
Decoding time: 16564us
Decoding time: 16689us
Decoding time: 16554us
Decoding time: 16628us
Decoding time: 16643us
Decoding time: 16620us
Decoding time: 16639us
Decoding time: 16587us
Decoding time: 16589us
Decoding time: 16617us
Decoding time: 16636us
Decoding time: 16674us
Decoding time: 16642us
Decoding time: 16636us
Decoding time: 16579us
Decoding time: 16560us
Decoding time: 16678us
Decoding time: 16578us
Decoding time: 16568us
Decoding time: 16604us
Decoding time: 16557us
Decoding time: 16657us
Decoding time: 16961us
Decoding time: 16583us
Decoding time: 23679us
Decoding time: 16654us
Decoding time: 16557us
Decoding time: 16640us
Decoding time: 16675us
Decoding time: 16613us
Decoding time: 16680us
Decoding time: 16569us
Decoding time: 16625us
Decoding time: 16604us
Decoding time: 16676us
Decoding time: 16610us
Decoding time: 16667us
Decoding time: 16618us
Decoding time: 16643us
Decoding time: 16600us
Decoding time: 16623us
Decoding time: 16652us
Decoding time: 16627us
Decoding time: 16630us
Decoding time: 16588us
Decoding time: 16621us
Decoding time: 16568us
Decoding time: 16662us
Decoding time: 16561us
Decoding time: 16640us
Decoding time: 16667us
Decoding time: 16584us
Decoding time: 16656us
Decoding time: 16661us
Decoding time: 16607us
Decoding time: 16612us
Decoding time: 16652us
Decoding time: 16632us
Decoding time: 16667us
Decoding time: 16596us
Decoding time: 16589us
Decoding time: 16622us
Decoding time: 16590us
Decoding time: 16587us
Decoding time: 16646us
Decoding time: 16573us
Decoding time: 16648us
Decoding time: 16611us
Decoding time: 16556us
Decoding time: 16599us
Decoding time: 16618us
Decoding time: 16629us
Decoding time: 16618us
Decoding time: 16466us
Decoding time: 16610us
Decoding time: 16682us
Decoding time: 16682us
Decoding time: 16646us
Decoding time: 16581us
Decoding time: 16581us
Decoding time: 16621us
Decoding time: 16585us
Decoding time: 16706us
Decoding time: 16658us
Decoding time: 16703us
Decoding time: 16661us
Decoding time: 16607us
Decoding time: 16672us
Decoding time: 16622us
Decoding time: 16632us
Decoding time: 16674us
Decoding time: 16663us
Decoding time: 16595us
Decoding time: 16617us
Decoding time: 16636us
Decoding time: 16648us
Decoding time: 16629us
Decoding time: 16636us
Decoding time: 16617us
Decoding time: 16622us
Decoding time: 16675us
Decoding time: 16717us
Decoding time: 16598us
Decoding time: 16651us
Decoding time: 16587us
Decoding time: 16633us
Decoding time: 16619us
Decoding time: 16593us
Decoding time: 16686us
Decoding time: 16627us
Decoding time: 16666us
Decoding time: 16643us
Decoding time: 16696us
Decoding time: 16646us
Decoding time: 16656us
Decoding time: 16711us
Decoding time: 16642us
Decoding time: 16576us
Decoding time: 16631us
Decoding time: 16639us
Decoding time: 16784us
Decoding time: 16636us
Decoding time: 16651us
Decoding time: 16644us
Decoding time: 16682us
Decoding time: 16642us
Decoding time: 16626us
Decoding time: 16626us
Decoding time: 16685us
Decoding time: 16609us
Decoding time: 16701us
Decoding time: 16689us
Decoding time: 16699us
Decoding time: 16618us
Decoding time: 16661us
Decoding time: 16601us
Decoding time: 16659us
Decoding time: 16679us
Decoding time: 16699us
Decoding time: 16654us
Decoding time: 16644us
Decoding time: 16664us
Decoding time: 16615us
Decoding time: 16645us
Decoding time: 16645us
Decoding time: 16647us
Decoding time: 16615us
Decoding time: 16518us
Decoding time: 16548us
Decoding time: 16570us
Decoding time: 16530us
Evaluation @iter 100000 done in 182 secs
TVL Loss   : 0.03657
TVL MS-SSIM: 0.93581
TVL PSNR   : 31.43813
