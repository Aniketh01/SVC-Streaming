Namespace(batch_size=2, bits=16, checkpoint_iters=5000, clip=0.5, decoder_fuse_level=1, distance1=6, distance2=6, encoder_fuse_level=1, eval='/home/mallesh/deepvideo/data/vtl/test', eval_batch_size=1, eval_iters=20000, eval_mv='/home/mallesh/deepvideo/data/vtl/test_mv', fuse_encoder=True, gamma=0.5, gpus='0', iterations=10, load_iter=20000, load_model_name='demo', lr=0.00025, max_train_iters=20000, model_dir='../vcodec/h0/model_iters_10', num_crops=2, out_dir='vtl_output/hrch_0_itr10', patch=64, save_codes=True, save_model_name='demo', save_out_img=False, schedule='10000,12000,14000,16000,18000', shrink=2, stack=True, train='/home/mallesh/deepvideo/data/dhf1k/train', train_mv='/home/mallesh/deepvideo/data/dhf1k/train_mv', v_compress=True, warp=True)

Creating loader for /home/mallesh/deepvideo/data/dhf1k/train...
4800 images loaded.
	distance=6/6
Loader for 4800 images (2400 batches) created.
	Encoder fuse level: 1
	Decoder fuse level: 1
	Decoder fuse level: 1
[EncoderCell(
  (conv): Conv2d(9, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
), Binarizer(
  (conv): Conv2d(512, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (sign): Sign()
), DecoderCell(
  (conv1): Conv2d(16, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), DecoderCell2(
  (conv1): Conv2d(160, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), UNet(
  (inc): inconv(
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (down1): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down2): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down3): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down4): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (up1): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up2): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up3): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up4): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
)]
Loading demo@iter 20000
Loading encoder from ../vcodec/h0/model_iters_10/demo_encoder_00020000.pth...
Loading binarizer from ../vcodec/h0/model_iters_10/demo_binarizer_00020000.pth...
Loading decoder from ../vcodec/h0/model_iters_10/demo_decoder_00020000.pth...
Loading unet from ../vcodec/h0/model_iters_10/demo_unet_00020000.pth...
Loading d2 from ../vcodec/h0/model_iters_10/demo_d2_00020000.pth...
[TRAIN] Iter[20001]; LR: 0.00025; Rec1 Loss: 0.017063; Rec2 Loss: 0.016419; Backprop: 0.0493 sec; Batch: 0.4582 sec
Start evaluation...

Creating loader for /home/mallesh/deepvideo/data/vtl/test...
136 images loaded.
	distance=6/6
Loader for 136 images (136 batches) created.
Creating directory vtl_output/hrch_0_itr10/iter20001/codes.
Creating directory vtl_output/hrch_0_itr10/iter20001/images.
Encoding time:106751
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106037
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106004
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106160
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105223
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105831
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105246
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105745
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105501
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105684
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105607
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105601
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105504
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105572
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105786
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105308
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105721
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105458
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105486
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105913
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106188
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106031
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105643
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105874
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106056
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106239
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105422
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105895
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105392
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105583
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106236
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105550
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105526
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105551
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105839
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105428
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105517
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105769
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105837
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106097
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105912
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105771
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106055
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105936
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105596
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105427
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105717
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105806
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105586
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105707
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105398
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105535
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105593
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105727
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105839
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105795
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105901
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105790
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105807
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105880
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105881
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105607
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105739
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105802
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105801
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105612
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105499
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:107135
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105623
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105713
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105427
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105726
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105342
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106114
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105775
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105816
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106183
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105941
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106374
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106125
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105718
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105808
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105604
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105791
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105797
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105739
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105618
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105930
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106051
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105646
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105756
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106061
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106157
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105869
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106239
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105797
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105737
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106019
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105632
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106087
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106627
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105730
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105785
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105634
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105391
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105835
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105641
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105540
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105628
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106203
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106270
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106195
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106125
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105849
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105748
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106326
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105645
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105929
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105540
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105682
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105731
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105618
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105833
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105763
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106112
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106759
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106074
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105871
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106158
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106355
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105663
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105864
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106128
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105939
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:106021
(1, 160, 18, 22)
(10, 16, 18, 22)
Encoding time:105563
(1, 160, 18, 22)
(10, 16, 18, 22)
Evaluation @iter 20001 done in 41 secs
TVL Loss   : 0.04922
TVL MS-SSIM: 0.90976
TVL PSNR   : 30.20716
Training done.
