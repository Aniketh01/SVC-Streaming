!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Abr	sabre-mmsys18.py	/^class Abr:$/;"	c
Bba	sabre-mmsys18.py	/^class Bba(Abr):$/;"	c
Bola	sabre-mmsys18.py	/^class Bola(Abr):$/;"	c
BolaEnh	sabre-mmsys18.py	/^class BolaEnh(Abr):$/;"	c
DownloadProgress	sabre-mmsys18.py	/^DownloadProgress = namedtuple('DownloadProgress',$/;"	v
Dynamic	sabre-mmsys18.py	/^class Dynamic(Abr):$/;"	c
DynamicDash	sabre-mmsys18.py	/^class DynamicDash(Abr):$/;"	c
Ewma	sabre-mmsys18.py	/^class Ewma(ThroughputHistory):$/;"	c
FastSwitch	sabre-mmsys18.py	/^class FastSwitch:$/;"	c
ManifestInfo	sabre-mmsys18.py	/^ManifestInfo = namedtuple('ManifestInfo', 'segment_time bitrates utilities segments')$/;"	v
NetworkModel	sabre-mmsys18.py	/^class NetworkModel:$/;"	c
NetworkPeriod	sabre-mmsys18.py	/^NetworkPeriod = namedtuple('NetworkPeriod', 'time bandwidth latency')$/;"	v
NoReplace	sabre-mmsys18.py	/^class NoReplace(FastSwitch):$/;"	c
Replace	sabre-mmsys18.py	/^class Replace(FastSwitch):$/;"	c
STARTUP	sabre-mmsys18.py	/^        STARTUP = 1$/;"	v	class:BolaEnh.State
STEADY	sabre-mmsys18.py	/^        STEADY = 2$/;"	v	class:BolaEnh.State
SlidingWindow	sabre-mmsys18.py	/^class SlidingWindow(ThroughputHistory):$/;"	c
State	sabre-mmsys18.py	/^    class State(Enum):$/;"	c	class:BolaEnh
ThroughputHistory	sabre-mmsys18.py	/^class ThroughputHistory:$/;"	c
ThroughputRule	sabre-mmsys18.py	/^class ThroughputRule(Abr):$/;"	c
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:Abr
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:Bba
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:Bola
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:BolaEnh
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:Dynamic
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:DynamicDash
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:Ewma
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:SlidingWindow
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:ThroughputHistory
__init__	sabre-mmsys18.py	/^    def __init__(self, config):$/;"	m	class:ThroughputRule
__init__	sabre-mmsys18.py	/^    def __init__(self, network_trace):$/;"	m	class:NetworkModel
__init__	sabre-mmsys18.py	/^    def __init__(self, strategy):$/;"	m	class:Replace
abandon_grace_time	sabre-mmsys18.py	/^    abandon_grace_time = 500$/;"	v	class:ThroughputRule
abandon_multiplier	sabre-mmsys18.py	/^    abandon_multiplier = 1.8$/;"	v	class:ThroughputRule
abandoned_to_quality	sabre-mmsys18.py	/^    abandoned_to_quality = None$/;"	v
abr	sabre-mmsys18.py	/^    abr = abr_list[args.abr](config)$/;"	v
abr_default	sabre-mmsys18.py	/^abr_default = 'bolae'$/;"	v
abr_list	sabre-mmsys18.py	/^abr_list = {}$/;"	v
advertize_new_network_quality	sabre-mmsys18.py	/^def advertize_new_network_quality(quality, previous_quality):$/;"	f
args	sabre-mmsys18.py	/^    args = parser.parse_args()$/;"	v
average_default	sabre-mmsys18.py	/^average_default = 'ewma'$/;"	v
average_list	sabre-mmsys18.py	/^average_list = {}$/;"	v
bbb	generate.py	/^    bbb = load_json('bbb.json')$/;"	v
bbb4k	generate.py	/^    bbb4k = load_json('bbb4k.json')$/;"	v
bitrates	sabre-mmsys18.py	/^    bitrates = manifest['bitrates_kbps']$/;"	v
buffer_contents	sabre-mmsys18.py	/^    buffer_contents = []$/;"	v
buffer_fcc	sabre-mmsys18.py	/^    buffer_fcc = 0$/;"	v
buffer_size	sabre-mmsys18.py	/^    buffer_size = args.max_buffer * 1000$/;"	v
cdf	generate.py	/^def cdf(l, margin = 0.025):$/;"	f
check_abandon	sabre-mmsys18.py	/^    def check_abandon(self, progress, buffer_level):$/;"	m	class:Abr
check_abandon	sabre-mmsys18.py	/^    def check_abandon(self, progress, buffer_level):$/;"	m	class:Bola
check_abandon	sabre-mmsys18.py	/^    def check_abandon(self, progress, buffer_level):$/;"	m	class:BolaEnh
check_abandon	sabre-mmsys18.py	/^    def check_abandon(self, progress, buffer_level):$/;"	m	class:Dynamic
check_abandon	sabre-mmsys18.py	/^    def check_abandon(self, progress, buffer_level):$/;"	m	class:DynamicDash
check_abandon	sabre-mmsys18.py	/^    def check_abandon(self, progress, buffer_level):$/;"	m	class:FastSwitch
check_abandon	sabre-mmsys18.py	/^    def check_abandon(self, progress, buffer_level):$/;"	m	class:Replace
check_abandon	sabre-mmsys18.py	/^    def check_abandon(self, progress, buffer_level):$/;"	m	class:ThroughputRule
check_replace	sabre-mmsys18.py	/^    def check_replace(self, quality):$/;"	m	class:FastSwitch
check_replace	sabre-mmsys18.py	/^    def check_replace(self, quality):$/;"	m	class:Replace
choices	sabre-mmsys18.py	/^    choices = ['none', 'left', 'right']$/;"	v
config	sabre-mmsys18.py	/^    config = {'buffer_size': buffer_size,$/;"	v
config	sabre-mmsys18.py	/^    config = {'window_size': args.window_size, 'half_life': args.half_life}$/;"	v
count	sabre-mmsys18.py	/^    count = len(manifest.segments)$/;"	v
default_half_life	sabre-mmsys18.py	/^    default_half_life = [8000, 3000]$/;"	v	class:Ewma
default_window_size	sabre-mmsys18.py	/^    default_window_size = [3]$/;"	v	class:SlidingWindow
delay	sabre-mmsys18.py	/^    def delay(self, time):$/;"	m	class:NetworkModel
deplete_buffer	sabre-mmsys18.py	/^def deplete_buffer(time):$/;"	f
do_download	sabre-mmsys18.py	/^    def do_download(self, size):$/;"	m	class:NetworkModel
do_figure	generate.py	/^def do_figure(prefix, subfigs, algorithms, metrics, term = None):$/;"	f
do_latency_delay	sabre-mmsys18.py	/^    def do_latency_delay(self, delay_units):$/;"	m	class:NetworkModel
do_minimal_download	sabre-mmsys18.py	/^    def do_minimal_download(self, size, min_size, min_time):$/;"	m	class:NetworkModel
do_minimal_latency_delay	sabre-mmsys18.py	/^    def do_minimal_latency_delay(self, delay_units, min_time):$/;"	m	class:NetworkModel
download	sabre-mmsys18.py	/^    def download(self, size, idx, quality, buffer_level, check_abandon = None):$/;"	m	class:NetworkModel
download_metric	sabre-mmsys18.py	/^    download_metric = network.download(size, 0, quality, 0)$/;"	v
download_time	sabre-mmsys18.py	/^    download_time = download_metric.time - download_metric.time_to_first_bit$/;"	v
estimate_average	sabre-mmsys18.py	/^    estimate_average = 0$/;"	v
figure11	generate.py	/^def figure11():$/;"	f
figure12_write_network	generate.py	/^def figure12_write_network():$/;"	f
figure6a	generate.py	/^def figure6a():$/;"	f
figure6b	generate.py	/^def figure6b():$/;"	f
figure8	generate.py	/^def figure8():$/;"	f
figure_12_13	generate.py	/^def figure_12_13():$/;"	f
figure_1_4	generate.py	/^def figure_1_4():$/;"	f
figure_7_10	generate.py	/^def figure_7_10():$/;"	f
gamma_p	sabre-mmsys18.py	/^    gamma_p = args.gamma_p$/;"	v
get_buffer_level	sabre-mmsys18.py	/^def get_buffer_level():$/;"	f
get_first_quality	sabre-mmsys18.py	/^    def get_first_quality(self):$/;"	m	class:Abr
get_first_quality	sabre-mmsys18.py	/^    def get_first_quality(self):$/;"	m	class:Dynamic
get_first_quality	sabre-mmsys18.py	/^    def get_first_quality(self):$/;"	m	class:DynamicDash
get_quality_delay	sabre-mmsys18.py	/^    def get_quality_delay(self, segment_index):$/;"	m	class:Abr
get_quality_delay	sabre-mmsys18.py	/^    def get_quality_delay(self, segment_index):$/;"	m	class:Bba
get_quality_delay	sabre-mmsys18.py	/^    def get_quality_delay(self, segment_index):$/;"	m	class:Bola
get_quality_delay	sabre-mmsys18.py	/^    def get_quality_delay(self, segment_index):$/;"	m	class:BolaEnh
get_quality_delay	sabre-mmsys18.py	/^    def get_quality_delay(self, segment_index):$/;"	m	class:Dynamic
get_quality_delay	sabre-mmsys18.py	/^    def get_quality_delay(self, segment_index):$/;"	m	class:DynamicDash
get_quality_delay	sabre-mmsys18.py	/^    def get_quality_delay(self, segment_index):$/;"	m	class:ThroughputRule
goodestimate_average	sabre-mmsys18.py	/^    goodestimate_average = 0$/;"	v
goodestimate_count	sabre-mmsys18.py	/^    goodestimate_count = 0$/;"	v
l	sabre-mmsys18.py	/^    l = download_metric.time_to_first_bit$/;"	v
last_played	sabre-mmsys18.py	/^    last_played = None$/;"	v
load_json	generate.py	/^def load_json(path):$/;"	f
load_json	sabre-mmsys18.py	/^def load_json(path):$/;"	f
low_buffer_safety_factor	sabre-mmsys18.py	/^    low_buffer_safety_factor = 0.5$/;"	v	class:BolaEnh
low_buffer_safety_factor	sabre-mmsys18.py	/^    low_buffer_safety_factor = 0.5$/;"	v	class:ThroughputRule
low_buffer_safety_factor_init	sabre-mmsys18.py	/^    low_buffer_safety_factor_init = 0.9$/;"	v	class:BolaEnh
low_buffer_safety_factor_init	sabre-mmsys18.py	/^    low_buffer_safety_factor_init = 0.9$/;"	v	class:ThroughputRule
low_buffer_threshold	sabre-mmsys18.py	/^    low_buffer_threshold = 10000$/;"	v	class:Dynamic
manifest	sabre-mmsys18.py	/^    manifest = ManifestInfo(segment_time = manifest['segment_duration_ms'],$/;"	v
manifest	sabre-mmsys18.py	/^    manifest = load_json(args.movie)$/;"	v
max_buffer_for_quality	sabre-mmsys18.py	/^    def max_buffer_for_quality(self, quality):$/;"	m	class:BolaEnh
max_buffer_size	sabre-mmsys18.py	/^    max_buffer_size = args.max_buffer * 1000$/;"	v
max_store	sabre-mmsys18.py	/^    max_store = 20$/;"	v	class:SlidingWindow
mean_stddev	generate.py	/^def mean_stddev(l):$/;"	f
min_buffer_for_quality	sabre-mmsys18.py	/^    def min_buffer_for_quality(self, quality):$/;"	m	class:BolaEnh
min_progress_size	sabre-mmsys18.py	/^    min_progress_size = 12000$/;"	v	class:NetworkModel
min_progress_time	sabre-mmsys18.py	/^    min_progress_time = 50$/;"	v	class:NetworkModel
minimum_buffer	sabre-mmsys18.py	/^    minimum_buffer = 10000$/;"	v	class:BolaEnh
minimum_buffer_per_level	sabre-mmsys18.py	/^    minimum_buffer_per_level = 2000$/;"	v	class:BolaEnh
network	sabre-mmsys18.py	/^    network = NetworkModel(network_trace)$/;"	v
network_trace	sabre-mmsys18.py	/^    network_trace = [NetworkPeriod(time      = p['duration_ms'],$/;"	v
network_trace	sabre-mmsys18.py	/^    network_trace = load_json(args.network)$/;"	v
next_network_period	sabre-mmsys18.py	/^    def next_network_period(self):$/;"	m	class:NetworkModel
next_segment	sabre-mmsys18.py	/^    next_segment = 1$/;"	v
overestimate_average	sabre-mmsys18.py	/^    overestimate_average = 0$/;"	v
overestimate_count	sabre-mmsys18.py	/^    overestimate_count = 0$/;"	v
parser	sabre-mmsys18.py	/^    parser = argparse.ArgumentParser(description = 'Simulate an ABR session.',$/;"	v
pending_quality_up	sabre-mmsys18.py	/^    pending_quality_up = []$/;"	v
played_bitrate	sabre-mmsys18.py	/^    played_bitrate = 0$/;"	v
played_utility	sabre-mmsys18.py	/^    played_utility = 0$/;"	v
playout_buffer	sabre-mmsys18.py	/^def playout_buffer():$/;"	f
process_quality_up	sabre-mmsys18.py	/^def process_quality_up(now):$/;"	f
push	sabre-mmsys18.py	/^    def push(self, time, tput, lat):$/;"	m	class:Ewma
push	sabre-mmsys18.py	/^    def push(self, time, tput, lat):$/;"	m	class:SlidingWindow
push	sabre-mmsys18.py	/^    def push(self, time, tput, lat):$/;"	m	class:ThroughputHistory
quality	sabre-mmsys18.py	/^    quality = abr.get_first_quality()$/;"	v
quality_from_buffer	sabre-mmsys18.py	/^    def quality_from_buffer(self):$/;"	m	class:Bola
quality_from_buffer	sabre-mmsys18.py	/^    def quality_from_buffer(self, level):$/;"	m	class:BolaEnh
quality_from_buffer_placeholder	sabre-mmsys18.py	/^    def quality_from_buffer_placeholder(self):$/;"	m	class:BolaEnh
quality_from_throughput	sabre-mmsys18.py	/^    def quality_from_throughput(self, tput):$/;"	m	class:Abr
rampup_origin	sabre-mmsys18.py	/^    rampup_origin = 0$/;"	v
rampup_threshold	sabre-mmsys18.py	/^    rampup_threshold = args.rampup_threshold$/;"	v
rampup_time	sabre-mmsys18.py	/^    rampup_time = None$/;"	v
reaction_metrics	sabre-mmsys18.py	/^    reaction_metrics = []$/;"	v
rebuffer_event_count	sabre-mmsys18.py	/^    rebuffer_event_count = 0$/;"	v
rebuffer_time	sabre-mmsys18.py	/^    rebuffer_time = 0$/;"	v
report_delay	sabre-mmsys18.py	/^    def report_delay(self, delay):$/;"	m	class:Abr
report_delay	sabre-mmsys18.py	/^    def report_delay(self, delay):$/;"	m	class:Bba
report_delay	sabre-mmsys18.py	/^    def report_delay(self, delay):$/;"	m	class:BolaEnh
report_delay	sabre-mmsys18.py	/^    def report_delay(self, delay):$/;"	m	class:Dynamic
report_delay	sabre-mmsys18.py	/^    def report_delay(self, delay):$/;"	m	class:DynamicDash
report_download	sabre-mmsys18.py	/^    def report_download(self, metrics, is_replacment):$/;"	m	class:Abr
report_download	sabre-mmsys18.py	/^    def report_download(self, metrics, is_replacment):$/;"	m	class:Bba
report_download	sabre-mmsys18.py	/^    def report_download(self, metrics, is_replacment):$/;"	m	class:BolaEnh
report_download	sabre-mmsys18.py	/^    def report_download(self, metrics, is_replacment):$/;"	m	class:Dynamic
report_download	sabre-mmsys18.py	/^    def report_download(self, metrics, is_replacment):$/;"	m	class:DynamicDash
report_seek	sabre-mmsys18.py	/^    def report_seek(self, where):$/;"	m	class:Abr
report_seek	sabre-mmsys18.py	/^    def report_seek(self, where):$/;"	m	class:Bba
report_seek	sabre-mmsys18.py	/^    def report_seek(self, where):$/;"	m	class:Bola
report_seek	sabre-mmsys18.py	/^    def report_seek(self, where):$/;"	m	class:BolaEnh
safety_factor	sabre-mmsys18.py	/^    safety_factor = 0.9$/;"	v	class:ThroughputRule
size	sabre-mmsys18.py	/^    size = manifest.segments[0][quality]$/;"	v
startup_time	sabre-mmsys18.py	/^    startup_time = download_time$/;"	v
t	generate.py	/^            t = threading.Thread(target = thread_run_gnuplot, args = (plotting, ))$/;"	v
t	sabre-mmsys18.py	/^    t = download_metric.size \/ download_time$/;"	v
thread_run_gnuplot	generate.py	/^def thread_run_gnuplot(plotting):$/;"	f
thread_run_sabre	generate.py	/^def thread_run_sabre(results, command):$/;"	f
throughput_history	sabre-mmsys18.py	/^    throughput_history = average_list[args.moving_average](config)$/;"	v
time	sabre-mmsys18.py	/^    time = count * manifest.segment_time + rebuffer_time + startup_time$/;"	v
to_time_average	sabre-mmsys18.py	/^    to_time_average = 1 \/ (total_play_time \/ manifest.segment_time)$/;"	v
total_bitrate_change	sabre-mmsys18.py	/^    total_bitrate_change = 0$/;"	v
total_log_bitrate_change	sabre-mmsys18.py	/^    total_log_bitrate_change = 0$/;"	v
total_play_time	sabre-mmsys18.py	/^    total_play_time = 0$/;"	v
total_reaction_time	sabre-mmsys18.py	/^    total_reaction_time = 0$/;"	v
utilities	sabre-mmsys18.py	/^    utilities = [math.log(b) + utility_offset for b in bitrates]$/;"	v
utility_offset	sabre-mmsys18.py	/^    utility_offset = 0 - math.log(bitrates[0]) # so utilities[0] = 0$/;"	v
verbose	sabre-mmsys18.py	/^    verbose = args.verbose$/;"	v
